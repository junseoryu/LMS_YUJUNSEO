/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-10-03 10:42:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.text.*;

public final class setting_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("	\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"http://humy2833.dothome.co.kr/customizing.html#\">\r\n");
      out.write("  <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js\"></script>\r\n");
      out.write("  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.24.0/moment.min.js\"></script>\r\n");
      out.write("  <script type=\"text/javascript\" src=\"resources/js/balance.js\"></script>\r\n");
      out.write("\r\n");
      out.write("  <style>\r\n");
      out.write("   a:hover {\r\n");
      out.write("       color:black;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #test : hover{\r\n");
      out.write("       color:black;\r\n");
      out.write("    }\r\n");
      out.write("    /* Remove the navbar's default margin-bottom and rounded borders */ \r\n");
      out.write("    .navbar {\r\n");
      out.write("      margin-bottom: 0;\r\n");
      out.write("      border-radius: 0;\r\n");
      out.write("      background-color: #375a7f;\r\n");
      out.write("     \r\n");
      out.write("    }\r\n");
      out.write("   \r\n");
      out.write("    /* Set height of the grid so .sidenav can be 100% (adjust as needed) */\r\n");
      out.write("    .row.content {height: 450px}\r\n");
      out.write("    \r\n");
      out.write("    /* Set gray background color and 100% height */\r\n");
      out.write("    .sidenav {\r\n");
      out.write("      padding-top: 20px;\r\n");
      out.write("      background-color: #ffffff;\r\n");
      out.write("      height: 100%;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    /* Set black background color, C and some padding */\r\n");
      out.write("    \r\n");
      out.write(" \r\n");
      out.write("    footer {\r\n");
      out.write("      background-color: #555;\r\n");
      out.write("      color: blue;\r\n");
      out.write("      padding: 15px;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    /* On small screens, set height to 'auto' for sidenav and grid */\r\n");
      out.write("    @media screen and (max-width: 767px) {\r\n");
      out.write("      .sidenav {\r\n");
      out.write("        height: auto;\r\n");
      out.write("        padding: 15px;\r\n");
      out.write("      }\r\n");
      out.write("      .row.content {height:auto;} \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    body {\r\n");
      out.write("  text-align: center;\r\n");
      out.write("  padding: 50px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  border : 1px solid #aec9f5; \r\n");
      out.write("  background-color: #ffffff;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  color : #757575;\r\n");
      out.write("  padding: 20px 30px;\r\n");
      out.write("  border-radius: 5px;\r\n");
      out.write("  box-shadow: 0px 17px 10px -10px rgba(0, 0, 0, 0.4);\r\n");
      out.write("  cursor: pointer;\r\n");
      out.write("  -webkit-transition: all ease-in-out 300ms;\r\n");
      out.write("  transition: all ease-in-out 300ms;\r\n");
      out.write("  width : 300px;\r\n");
      out.write("  height : 150px;\r\n");
      out.write("  line-height:100px;\r\n");
      out.write("  font-weight : bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".button:hover {\r\n");
      out.write("  box-shadow: 0px 37px 20px -20px rgba(0, 0, 0, 0.2);\r\n");
      out.write("  -webkit-transform: translate(0px, -10px) scale(1.2);\r\n");
      out.write("          transform: translate(0px, -10px) scale(1.2);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    #bannerBox > ul{\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#bannerBox2 > ul{\r\n");
      out.write("	margin-top: 5px;\r\n");
      out.write("}\r\n");
      out.write("  </style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script type=\"text/javascript\" src=\"resources/js/master.js\"></script>\r\n");
      out.write("    \r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("    let count = 0;\r\n");
      out.write("    let data = \"\";\r\n");
      out.write("    // 개설 강좌 정보 서버에 보내기\r\n");
      out.write("    function getSubject(){\r\n");
      out.write("    	let mbId = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("    	let csCode = document.getElementsByName(\"csCode\")[0];\r\n");
      out.write("    	let opCode = document.getElementsByName(\"opCode\")[0];\r\n");
      out.write("    	\r\n");
      out.write("    	let sendJsonData = [];\r\n");
      out.write("   	  	sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value});\r\n");
      out.write("   	  	let clientData = JSON.stringify(sendJsonData);\r\n");
      out.write("    	postAjax(\"teacher/getSetting\",clientData,\"addSubject\",\"json\")\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 개설 강좌 이전 내용 불러오기\r\n");
      out.write("    function addSubject(jsonData){\r\n");
      out.write("    	let csName = document.getElementById(\"csName\");\r\n");
      out.write("    	let opName = document.getElementsByName(\"opName\")[1];\r\n");
      out.write("    	let startDate = document.getElementsByName(\"startDate\")[0];\r\n");
      out.write("    	let endDate = document.getElementsByName(\"endDate\")[0];\r\n");
      out.write("    	\r\n");
      out.write("    	csName.innerText = jsonData[0].csName;\r\n");
      out.write("    	opName.value = jsonData[1].opName;\r\n");
      out.write("    	startDate.value = moment(jsonData[1].startDate).format('YYYY-MM-DD');\r\n");
      out.write("    	endDate.value = moment(jsonData[1].endDate).format('YYYY-MM-DD');\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 개설강좌 수정하기\r\n");
      out.write("    function updateSubject(){\r\n");
      out.write("    	let mbId = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("    	let csCode = document.getElementsByName(\"csCode\")[0];\r\n");
      out.write("    	let opCode = document.getElementsByName(\"opCode\")[0];\r\n");
      out.write("    	let opName = document.getElementsByName(\"opName\")[0];\r\n");
      out.write("    	let startDate = document.getElementsByName(\"startDate\")[0];\r\n");
      out.write("    	let endDate = document.getElementsByName(\"endDate\")[0];\r\n");
      out.write("    	\r\n");
      out.write("    	let sendJsonData = [];\r\n");
      out.write("   	  	sendJsonData.push({csCode:csCode.value,opCode:opCode.value,opName:opName.value,startDate:startDate.value,endDate:endDate.value});\r\n");
      out.write("   	  	let clientData = JSON.stringify(sendJsonData);\r\n");
      out.write("    	postAjax(\"teacher/updateSubject\",clientData,\"updateMsg\",\"json\")\r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 수정 -> 내용 + 알림\r\n");
      out.write("    function updateMsg(message){\r\n");
      out.write("    	alert(JSON.parse(JSON.stringify(message)).message);\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    // 이전 성적 관리 기준 수정 가져오기\r\n");
      out.write("    function getScoreStandard(){\r\n");
      out.write("    	\r\n");
      out.write("    	let mbId = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("    	let csCode = document.getElementsByName(\"csCode\")[0];\r\n");
      out.write("    	let opCode = document.getElementsByName(\"opCode\")[0];\r\n");
      out.write("    \r\n");
      out.write("    	let div = document.getElementById(\"changeBox\");\r\n");
      out.write("    	\r\n");
      out.write("    	if(div.innerHTML != \"\"){\r\n");
      out.write("    		div.innerHTML = \"\";\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	let sendJsonData = [];\r\n");
      out.write("   	  	sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value});\r\n");
      out.write("   	  	let clientData = JSON.stringify(sendJsonData);\r\n");
      out.write("    	postAjax(\"teacher/getScoreStandard\",clientData,\"addScoreStandard\",\"json\")\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 이전 성적 관리 기준 수정 출력\r\n");
      out.write("    function addScoreStandard(jsonData){\r\n");
      out.write("    	let div = document.getElementById(\"modalBox\");\r\n");
      out.write("    	\r\n");
      out.write("    	// data 초기화 필수\r\n");
      out.write("    	data = \"\";	\r\n");
      out.write("    	div.innerHTML = \"\";\r\n");
      out.write("  \r\n");
      out.write("    	for(i=0; i < jsonData.length; i++){\r\n");
      out.write("    		div.innerHTML += \"<div><div name='itemBox' style='display:inline-block;'></div>&nbsp;\"+ (i+1)+\". <span>\"+jsonData[i].itemName+\"</span><input type='hidden' name='itemCode' value='\"+jsonData[i].itemCode+\"' /><input type='hidden' name='itemName' value='\"+jsonData[i].itemName+\"' /> <span name='itemPercent'>\"+jsonData[i].itemPercent+\"</span></div>\";\r\n");
      out.write("    		data += jsonData[i].itemPercent + \",\";\r\n");
      out.write("    		count = i;\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 추가 버튼 클릭 시\r\n");
      out.write("    function createBox(){\r\n");
      out.write("    	let div = document.getElementById(\"changeBox\");\r\n");
      out.write("    	let changediv = document.getElementById(\"changeBox2\");\r\n");
      out.write("    	\r\n");
      out.write("    	if(div.innerHTML != \"\"){\r\n");
      out.write("     		div.innerHTML = \"\";\r\n");
      out.write("     		let changediv = document.getElementById(\"changeBox3\");\r\n");
      out.write("     		changediv.innerHTML = \"\";\r\n");
      out.write("    		getScoreStandard();\r\n");
      out.write("    	}else{\r\n");
      out.write("    		if(document.getElementsByName(\"itemBox\")[0].innerHTML != \"\"){\r\n");
      out.write("    			for(i=0; i < count+1; i++){\r\n");
      out.write("     				let item = document.getElementsByName(\"itemBox\")[i];\r\n");
      out.write("     				item.innerHTML = \"\";\r\n");
      out.write("     			}\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    		changediv.innerHTML = \"\";\r\n");
      out.write("    		div.innerHTML = \"\";\r\n");
      out.write("    		div.innerHTML += \"<br><div> 추가하기 </div>\";\r\n");
      out.write("        	div.innerHTML += \"<div><select name ='category' onChange='addName(this.options[this.selectedIndex].value)'>\"+\"</option>\"+\"<option value='T'>과제</option>\"+\"<option value='Q'>퀴즈</option>\"+\"<option value='A'>출결</option>\"+\"<option value='E'>기타</option>\"+\"</select><input type='number' name='addGrade'/><div id='addName'></div></div>\";\r\n");
      out.write("     		div.innerHTML += \"<input type='button' value='추가하기' onClick='plusScoreStandard()' />\";\r\n");
      out.write("     		for(i=0; i < count+1; i++){\r\n");
      out.write("     			let item = document.getElementsByName(\"itemPercent\")[i];\r\n");
      out.write("     			item.innerHTML = \"<input type='number' name='itemPercentValue' value='\"+data.split(\",\")[i]+\"'/>\";\r\n");
      out.write("     		}\r\n");
      out.write("     		div.innerHTML += \"<div id='addScoreAll'></div>\";\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 삭제 버튼 클릭 시\r\n");
      out.write("    function deleteBox(){\r\n");
      out.write("    	let changediv = document.getElementById(\"changeBox\");\r\n");
      out.write("    	let div = document.getElementById(\"changeBox2\");\r\n");
      out.write("    	let modalBox = document.getElementById(\"modalBox\");\r\n");
      out.write("    	\r\n");
      out.write("    	\r\n");
      out.write("    	if(div.innerHTML == \"\"){\r\n");
      out.write("    		changediv.innerHTML = \"\";\r\n");
      out.write("    		\r\n");
      out.write("    		for(i=0; i < count+1; i++){\r\n");
      out.write("     			let item = document.getElementsByName(\"itemPercent\")[i];\r\n");
      out.write("     			item.innerHTML = \"<input type='number' name='item' value='\"+data.split(\",\")[i]+\"'/> <input type='button' value='삭제' onClick='javascript:minusScoreStandard(\"+i+\"); scoreMsg(\"+i+\");' />\";\r\n");
      out.write("     		}\r\n");
      out.write("    		\r\n");
      out.write("    		div.innerHTML += \"<br><div id='scoreMsg'></div>\";\r\n");
      out.write("    		\r\n");
      out.write("    	}else{\r\n");
      out.write("    		for(i=0; i < count+1; i++){\r\n");
      out.write(" 				let item = document.getElementsByName(\"itemBox\")[i];\r\n");
      out.write(" 				item.innerHTML = \"\";\r\n");
      out.write(" 			}\r\n");
      out.write("    		let changediv = document.getElementById(\"changeBox3\");\r\n");
      out.write("    		changediv.innerHTML = \"\";\r\n");
      out.write("    		div.innerHTML = \"\";\r\n");
      out.write("    		getScoreStandard();\r\n");
      out.write("    	}    \r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    // 수정 버튼 클릭 시\r\n");
      out.write("    function updateBox(){\r\n");
      out.write("    	let div = document.getElementById(\"changeBox\");\r\n");
      out.write("    	let changediv = document.getElementById(\"changeBox3\");\r\n");
      out.write("    	\r\n");
      out.write("    	if(changediv.innerHTML != \"\"){\r\n");
      out.write("    		changediv.innerHTML = \"\";\r\n");
      out.write("    		div.innerHTML = \"\";\r\n");
      out.write("    		getScoreStandard();\r\n");
      out.write("    	}else{\r\n");
      out.write("    		if(document.getElementsByName(\"itemBox\")[0].innerHTML != \"\"){\r\n");
      out.write("    			for(i=0; i < count+1; i++){\r\n");
      out.write("     				let item = document.getElementsByName(\"itemBox\")[i];\r\n");
      out.write("     				item.innerHTML = \"\";\r\n");
      out.write("     			}\r\n");
      out.write("    		}\r\n");
      out.write("    		\r\n");
      out.write("    		div.innerHTML = \"\";\r\n");
      out.write("    		changediv.innerHTML = \"\";\r\n");
      out.write("    		changediv.innerHTML += \"<input type='button' value='수정하기' onClick='updateScoreStandard()' />\";\r\n");
      out.write("    		\r\n");
      out.write("     		for(i=0; i < count+1; i++){\r\n");
      out.write("     			let item = document.getElementsByName(\"itemPercent\")[i];\r\n");
      out.write("     			item.innerHTML = \"<input type='number' name='itemPercentValue' value='\"+data.split(\",\")[i]+\"'/>\";\r\n");
      out.write("     		}\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write(" 	// 백분율 알림\r\n");
      out.write("    function scoreMsg(index){\r\n");
      out.write("    	let divMsg = document.getElementById(\"scoreMsg\");\r\n");
      out.write("    	let itemName = document.getElementsByName(\"itemName\")[index].value;\r\n");
      out.write("    	let resultScore = 0;\r\n");
      out.write("    	\r\n");
      out.write("    	for(i=0; i < count+1; i++){\r\n");
      out.write("    		if(i != index){\r\n");
      out.write("    		let itemPercentValue = document.getElementsByName(\"item\")[i];\r\n");
      out.write("    		resultScore += parseInt(itemPercentValue.value);\r\n");
      out.write("    		}\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	if(resultScore != 100){\r\n");
      out.write("    	divMsg.innerText = (index+1)+\".\"+itemName +\" 제외한 백분율의 합은\"+resultScore+\"입니다\";\r\n");
      out.write("    	}\r\n");
      out.write(" 	}\r\n");
      out.write("    \r\n");
      out.write(" 	// 기타일 경우 -> 이름\r\n");
      out.write("    function addName(data){\r\n");
      out.write("  	  if(data == \"E\"){\r\n");
      out.write("  		  let div = document.getElementById(\"addName\");\r\n");
      out.write("  		  div.innerHTML = \"이름 : <input name='nameBox' type='text'/>\";\r\n");
      out.write("  	  }else{\r\n");
      out.write("  		  let test = document.getElementById(\"addName\");\r\n");
      out.write("  		  if(test.innerText != \"\"){\r\n");
      out.write("  			  test.innerText = \"\"; \r\n");
      out.write("  		  }	  \r\n");
      out.write("  	  }\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write(" 	\r\n");
      out.write(" 	// 추가 내용 서버에 보내기  0번 : insert , 나머지 : update\r\n");
      out.write(" 	function plusScoreStandard() {\r\n");
      out.write(" 		let mbId = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("    	let csCode = document.getElementsByName(\"csCode\")[0];\r\n");
      out.write("    	let opCode = document.getElementsByName(\"opCode\")[0];\r\n");
      out.write("    	let check = false;\r\n");
      out.write("    	let check2 = true;\r\n");
      out.write(" 		let resultScore = 0;\r\n");
      out.write(" 		let addScoreAll = document.getElementById(\"addScoreAll\");\r\n");
      out.write(" 		\r\n");
      out.write("    	let category = document.getElementsByName(\"category\")[0];\r\n");
      out.write("    	let addGrade = document.getElementsByName(\"addGrade\")[0];\r\n");
      out.write("    	// E일 경우에 이름까지 보내야함 + 0번지로\r\n");
      out.write("    	let sendJsonData = [];\r\n");
      out.write("    	\r\n");
      out.write("    	if(category.value == \"T\"){\r\n");
      out.write("    		sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:category.value,itemName:\"과제\",itemPercent:addGrade.value});\r\n");
      out.write("    	}else if(category.value == \"Q\"){\r\n");
      out.write("    		sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:category.value,itemName:\"퀴즈\",itemPercent:addGrade.value});\r\n");
      out.write("    	}else if(category.value == \"A\"){\r\n");
      out.write("    		sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:category.value,itemName:\"출석\",itemPercent:addGrade.value});\r\n");
      out.write("    	}else{\r\n");
      out.write("    		let nameBox = document.getElementsByName(\"nameBox\")[0];\r\n");
      out.write("    		sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:category.value,itemName:nameBox.value,itemPercent:addGrade.value});\r\n");
      out.write("			if(nameBox.value == \"\"){\r\n");
      out.write("				check2 = false;\r\n");
      out.write("				alert(\"이름을 적어주세요.\");\r\n");
      out.write("			}\r\n");
      out.write("    	}\r\n");
      out.write("    	resultScore += parseInt(addGrade.value);\r\n");
      out.write("    	\r\n");
      out.write("    	for(i=0; i < count+1; i++){\r\n");
      out.write("    		let itemCode = document.getElementsByName(\"itemCode\")[i];\r\n");
      out.write("    		let itemName = document.getElementsByName(\"itemName\")[i];\r\n");
      out.write("        	let itemPercentValue = document.getElementsByName(\"itemPercentValue\")[i];\r\n");
      out.write("        	sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:itemCode.value,itemPercent:itemPercentValue.value});\r\n");
      out.write("        	resultScore += parseInt(itemPercentValue.value);\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	if(resultScore == 100){\r\n");
      out.write("    		check = true;\r\n");
      out.write("    	}else{\r\n");
      out.write("    		\r\n");
      out.write("    		addScoreAll.innerText = \"현재 백분율은 : \"+resultScore +\" 입니다\";\r\n");
      out.write("    		alert(\"백분율을 100으로 맞춰주세요.\");\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write("    	if(check && check2){\r\n");
      out.write("    		addScoreAll.innerText = \"\";\r\n");
      out.write("    		let clientData = JSON.stringify(sendJsonData);\r\n");
      out.write("     		postAjax('teacher/plusScoreStandard',clientData,'sendMsg','json')\r\n");
      out.write("    	}\r\n");
      out.write("   	  	\r\n");
      out.write(" 	}\r\n");
      out.write(" 	\r\n");
      out.write(" 	// 삭제 내용 서버에 보내기\r\n");
      out.write(" 	function minusScoreStandard(index) {\r\n");
      out.write(" 		\r\n");
      out.write(" 		let mbId = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("    	let csCode = document.getElementsByName(\"csCode\")[0];\r\n");
      out.write("    	let opCode = document.getElementsByName(\"opCode\")[0];\r\n");
      out.write(" 		\r\n");
      out.write("    	let itemCode = document.getElementsByName(\"itemCode\")[index];\r\n");
      out.write("		let itemName = document.getElementsByName(\"itemName\")[index];\r\n");
      out.write("    	let itemPercentValue = document.getElementsByName(\"item\")[index];\r\n");
      out.write("    	\r\n");
      out.write(" 		let check = false;\r\n");
      out.write(" 		let sendJsonData = [];\r\n");
      out.write(" 		let resultScore = 0;\r\n");
      out.write(" 		\r\n");
      out.write(" 		// delete 값\r\n");
      out.write(" 		sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:itemCode.value,itemPercent:itemPercentValue.value});\r\n");
      out.write(" 		\r\n");
      out.write(" 		// 나머지 업데이트\r\n");
      out.write(" 		for(i=0; i < count+1; i++){\r\n");
      out.write(" 			if(i != index){\r\n");
      out.write("    		let itemCode = document.getElementsByName(\"itemCode\")[i];\r\n");
      out.write("    		let itemName = document.getElementsByName(\"itemName\")[i];\r\n");
      out.write("        	let itemPercentValue = document.getElementsByName(\"item\")[i];\r\n");
      out.write("        	sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:itemCode.value,itemPercent:itemPercentValue.value});\r\n");
      out.write("        	resultScore += parseInt(itemPercentValue.value);\r\n");
      out.write(" 			}\r\n");
      out.write("    	}\r\n");
      out.write(" 		\r\n");
      out.write(" 		if(resultScore == 100){\r\n");
      out.write("    		check = true;\r\n");
      out.write("    	}else{\r\n");
      out.write("    		alert(\"백분율을 100으로 맞춰주세요.\");\r\n");
      out.write("    	}\r\n");
      out.write(" 		\r\n");
      out.write(" 		if(check){\r\n");
      out.write(" 			let scoreMsg = document.getElementById(\"scoreMsg\");\r\n");
      out.write(" 			scoreMsg.innerText = \"\";\r\n");
      out.write(" 			let clientData = JSON.stringify(sendJsonData);\r\n");
      out.write(" 	 		postAjax('teacher/minusScoreStandard',clientData,'sendMsg','json')\r\n");
      out.write(" 		}\r\n");
      out.write(" 		\r\n");
      out.write(" 	}\r\n");
      out.write(" 	\r\n");
      out.write(" 	// 수정 내용 서버에 보내기\r\n");
      out.write(" 	function updateScoreStandard(){\r\n");
      out.write(" 		let mbId = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("    	let csCode = document.getElementsByName(\"csCode\")[0];\r\n");
      out.write("    	let opCode = document.getElementsByName(\"opCode\")[0];\r\n");
      out.write("    	\r\n");
      out.write("    	let check = false;\r\n");
      out.write("    	let sendJsonData = [];\r\n");
      out.write("    	let resultScore = 0;\r\n");
      out.write("    	\r\n");
      out.write("    	// 나머지 업데이트\r\n");
      out.write(" 		for(i=0; i < count+1; i++){\r\n");
      out.write("    		let itemCode = document.getElementsByName(\"itemCode\")[i];\r\n");
      out.write("    		let itemName = document.getElementsByName(\"itemName\")[i];\r\n");
      out.write("        	let itemPercentValue = document.getElementsByName(\"itemPercentValue\")[i];\r\n");
      out.write("        	sendJsonData.push({mbId:mbId.value,csCode:csCode.value,opCode:opCode.value,itemCode:itemCode.value,itemPercent:itemPercentValue.value});\r\n");
      out.write("        	resultScore += parseInt(itemPercentValue.value);\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write(" 		if(resultScore == 100){\r\n");
      out.write("    		check = true;\r\n");
      out.write("    	}else{\r\n");
      out.write("    		alert(resultScore);\r\n");
      out.write("    		alert(\"백분율을 100으로 맞춰주세요.\");\r\n");
      out.write("    	}\r\n");
      out.write("    	\r\n");
      out.write(" 		\r\n");
      out.write(" 		if(check){\r\n");
      out.write(" 		let clientData = JSON.stringify(sendJsonData);\r\n");
      out.write(" 		postAjax('teacher/updateScoreStandard',clientData,'sendMsg','json')\r\n");
      out.write(" 		}\r\n");
      out.write(" 	}\r\n");
      out.write(" 	\r\n");
      out.write(" 	// 결과 메세지 및 리턴\r\n");
      out.write(" 	function sendMsg(message){\r\n");
      out.write(" 		alert(JSON.parse(JSON.stringify(message)).message);\r\n");
      out.write(" 		getScoreStandard();\r\n");
      out.write(" 	}\r\n");
      out.write(" 	\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("    \r\n");
      out.write("<body onload=\"mbTypeCheck('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mbType}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'); getAjax('https://api.ipify.org','format=json', 'getPublicIp');\">\r\n");
      out.write("	\r\n");
      out.write("	<nav  class=\"navbar navbar-inverse navbar-fixed-top\">\r\n");
      out.write("	<div class=\"container-fluid\" style=\"display: flex;\">\r\n");
      out.write("		<div class=\"navbar-header\">\r\n");
      out.write("			<button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\"\r\n");
      out.write("				data-target=\"#myNavbar\">\r\n");
      out.write("				<span class=\"icon-bar\"></span> <span class=\"icon-bar\"></span> <span\r\n");
      out.write("					class=\"icon-bar\"></span>\r\n");
      out.write("			</button>\r\n");
      out.write("			<a class=\"navbar-brand\" href=\"#\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("			<ul class=\"nav navbar-nav\">\r\n");
      out.write("				<li><a href=\"main\" id=\"test\" style=\"color: white;\"><img\r\n");
      out.write("						src=\"resources/images/eljl_LOGO_final.png\"\r\n");
      out.write("						style=\"height: 30px; width: 100px;\" /></a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("		<div id= \"bannerBox\" style=\"margin: 0 auto;\">\r\n");
      out.write("			<ul class=\"nav navbar-nav\">\r\n");
      out.write("				<li><a style=\"color: white;\" onClick=\"moveStream()\">스트림</a></li>\r\n");
      out.write("					<li><a  style=\"color: white;\" onClick=\"moveClass()\">수업</a></li>\r\n");
      out.write("					<li class=\"teItem\"><a  style=\"color: white;\" onClick=\"moveAttend()\">출석부</a></li>\r\n");
      out.write("					<li class=\"teItem\"><a  style=\"color: white;\" onClick=\"moveStuManage()\">학생관리</a></li>\r\n");
      out.write("					<li class=\"stuItem\"><a  style=\"color: white;\" onClick=\"moveMyPage()\">마이페이지</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div id=\"bannerBox2\">\r\n");
      out.write("			<ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("				<li class=\"teItem\"><a onClick=\"moveSetting()\"><span class=\"glyphicon glyphicon-cog\"\r\n");
      out.write("						style=\"color: white;\"></span></a></li>\r\n");
      out.write("				<li><a style=\"color: white;\" onClick=\"logOut('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mbId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("')\"><span\r\n");
      out.write("						class=\"glyphicon glyphicon-log-out\"></span> 로그아웃</a></li>\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</nav>\r\n");
      out.write("	\r\n");
      out.write("	<input type='hidden' name='mbId' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${mbId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' />\r\n");
      out.write("	<input type='hidden' name='csCode' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${csCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' />\r\n");
      out.write("	<input type='hidden' name='opCode' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${opCode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' />\r\n");
      out.write("	<input type='hidden' name='opName' value='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${opName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' />\r\n");
      out.write("	\r\n");
      out.write("	<div style=\"height:200px;\">\r\n");
      out.write("	</div>\r\n");
      out.write("	\r\n");
      out.write("	<div style=\"magin:0 auto;\">\r\n");
      out.write("		<div style=\"display: inline-block; margin-right:100px;\">\r\n");
      out.write("			<div class=\"button\" data-toggle=\"modal\" data-target=\"#updateClass1\" onClick=\"getSubject()\">개설강좌 수정</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div style=\"display: inline-block; margin-left:100px;\">\r\n");
      out.write("		<div class=\"button\" data-toggle=\"modal\" data-target=\"#updateClass2\" onClick=\"getScoreStandard()\">성적 관리 기준 수정</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
 Date date = new Date(); 
SimpleDateFormat simpleDate = new SimpleDateFormat("yyyy-MM-dd");
String strdate = simpleDate.format(date);

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 클래스 생성 모달창 첫번째 -->\r\n");
      out.write("<div class=\"modal fade\" id=\"updateClass1\" role=\"dialog\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal content-->\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("          <h4 class=\"modal-title\">개설강좌 수정</h4>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-body\">\r\n");
      out.write("          <p>학과 명</p>\r\n");
      out.write("          	<div id=\"csName\"></div><br>\r\n");
      out.write("           <p>강좌 명</p>\r\n");
      out.write("             <input type=\"text\" name=\"opName\">	\r\n");
      out.write("           <p>시작 날짜</p>\r\n");
      out.write("          	<input type=\"date\" name=\"startDate\" min=\"");
      out.print(strdate );
      out.write("\" >\r\n");
      out.write("            <p>종료 날짜</p>\r\n");
      out.write("          	<input type=\"date\" name=\"endDate\"  min=\"");
      out.print(strdate );
      out.write("\" onblur=\"endDateCheck()\">\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("         <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\" data-toggle=\"modal\" data-target=\"#createClass2\" onClick=\"updateSubject()\">수정</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("         \r\n");
      out.write("      \r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("<!-- 클래스 생성 모달창 두번째 -->\r\n");
      out.write("  <div style=\"overflow:scroll;\" class=\"modal fade\" id=\"updateClass2\" role=\"dialog\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("    \r\n");
      out.write("      <!-- Modal content-->\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("          <h4 class=\"modal-title\">성적 관리 기준 수정</h4>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-body\" id=\"modal-body\">\r\n");
      out.write("          <p> 현재 성적 기준 </p>\r\n");
      out.write("          <div style=\"color:red;\">*성적 기준을 삭제하면 데이터가 초기화됩니다.</div><br>\r\n");
      out.write("          <div id=\"modalBox\">\r\n");
      out.write("          </div>\r\n");
      out.write("          <div id=\"changeBox\"></div>\r\n");
      out.write("          <div id=\"changeBox2\"></div>\r\n");
      out.write("          <div id=\"changeBox3\"></div>          \r\n");
      out.write("         \r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" onClick=\"updateBox()\">수정</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" onClick=\"createBox()\">추가</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" onClick=\"deleteBox()\">삭제</button>\r\n");
      out.write("          <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("          \r\n");
      out.write("        \r\n");
      out.write("      </div>\r\n");
      out.write("      \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
