/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.46
 * Generated at: 2021-10-04 12:22:41 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class joinTeacher_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"resources/js/master.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"resources/css/joinTeacher.css\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("<link href=\"https://fonts.googleapis.com/css2?family=Gowun+Dodum&display=swap\" rel=\"stylesheet\"> \r\n");
      out.write("<link rel=\"stylesheet\" href=\"resources/css/master.css\">\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	//아이디 체크\r\n");
      out.write("	const pwdComp1 = /[a-z]/g;\r\n");
      out.write("	const pwdComp2 = /[0-9]/g;\r\n");
      out.write("	const pwdComp3 = /[!@#$%^&*]/g;\r\n");
      out.write("	const pwdComp4 = /[A-Z]/g;\r\n");
      out.write("	\r\n");
      out.write("	function idCheck() {\r\n");
      out.write("		let id = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("		let idCheck = document.getElementById(\"idCheck\");\r\n");
      out.write("		if (id.value.length > 3 && id.value.length < 13) {\r\n");
      out.write("			if(pwdComp3.test(id) == true) {\r\n");
      out.write("				idCheck.innerText = \"4-12자의 영문 소문자,숫자만 사용가능합니다\";\r\n");
      out.write("			}\r\n");
      out.write("			idCheck.innerText = \"중복확인\";\r\n");
      out.write("		} else {\r\n");
      out.write("			idCheck.innerText = \"4-12자의 영문 소문자,숫자만 사용가능합니다\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	//중복확인\r\n");
      out.write("	function dupCheck(){\r\n");
      out.write("		let id = document.getElementsByName(\"mbId\")[0];\r\n");
      out.write("		postAjax(\"dupCheck\",\"mbId=\"+id.value,\"dupCheckMessage\",\"form\");\r\n");
      out.write("	}\r\n");
      out.write("	//중복확인 메세지\r\n");
      out.write("	function dupCheckMessage(jsonData){\r\n");
      out.write("		let idCheck = document.getElementById(\"idCheck\");\r\n");
      out.write("		if(jsonData){\r\n");
      out.write("			idCheck.innerText = \"사용가능한 아이디입니다\";\r\n");
      out.write("		}else{\r\n");
      out.write("			idCheck.innerText = \"사용 불가능한 아이디입니다\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//비밀번호 체크 (소문자, 특수문자, 숫자 포함)\r\n");
      out.write("	function pwCheck() {\r\n");
      out.write("		let pw = document.getElementsByName(\"mbPw\")[0];\r\n");
      out.write("		let pwCheck = document.getElementById(\"pwCheck\");\r\n");
      out.write("		let count = 0;\r\n");
      out.write("		if (pw.value.length > 5 && pw.value.length < 13) {\r\n");
      out.write("			count += pwdComp1.test(pw.value) ? 1 : 0;\r\n");
      out.write("			count += pwdComp2.test(pw.value) ? 1 : 0;\r\n");
      out.write("			count += pwdComp3.test(pw.value) ? 1 : 0;\r\n");
      out.write("			count == 3 ? pwCheck.innerText = \"사용 가능한 비밀번호입니다.\"\r\n");
      out.write("					: pwCheck.innerText = \"6-12자 소문자,특수문자,숫자를 사용하세요.\";\r\n");
      out.write("		} else {\r\n");
      out.write("			pwCheck.innerText = \"6-12자 소문자,특수문자,숫자를 사용하세요.\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("	//비밀번호 재확인\r\n");
      out.write("	function repwCheck() {\r\n");
      out.write("		let pw = document.getElementsByName(\"mbPw\")[0];\r\n");
      out.write("		let rePw = document.getElementsByName(\"rembPw\")[0];\r\n");
      out.write("		let repwCheck = document.getElementById(\"repwCheck\");\r\n");
      out.write("		if(pw.value != rePw.value){\r\n");
      out.write("			repwCheck.innerText = \"비밀번호가 일치하지 않습니다.\";\r\n");
      out.write("		}else{\r\n");
      out.write("			repwCheck.innerText = \"비밀번호가 일치합니다.\";\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	// 회원가입 서버 전송\r\n");
      out.write("	function submit () {\r\n");
      out.write("		let id = document.getElementsByName(\"mbId\")[0];		\r\n");
      out.write("		let pw = document.getElementsByName(\"mbPw\")[0];\r\n");
      out.write("		let name = document.getElementsByName(\"mbName\")[0];\r\n");
      out.write("		let phone = document.getElementsByName(\"mbPhone\")[0];\r\n");
      out.write("		let mail1 = document.getElementsByName(\"mail1\")[0];\r\n");
      out.write("		let mail2 = document.getElementsByName(\"mail2\")[0];\r\n");
      out.write("		let mbMail = makeInput('hidden','mbMail',mail1.value+mail2.value);\r\n");
      out.write("		let file = document.getElementsByName(\"mbFile\")[0];\r\n");
      out.write("		\r\n");
      out.write("		if(id.value == \"\"){\r\n");
      out.write("			id.focus();\r\n");
      out.write("		}else if(pw.value == \"\"){\r\n");
      out.write("			pw.focus();\r\n");
      out.write("		}else if(name.value == \"\"){\r\n");
      out.write("			name.focus();	\r\n");
      out.write("		}else if(phone.value == \"\"){\r\n");
      out.write("			phone.focus();	\r\n");
      out.write("		}else if(mail1.value == \"\"){\r\n");
      out.write("			mail1.focus();		\r\n");
      out.write("		}else{\r\n");
      out.write("			let f = document.createElement(\"form\");\r\n");
      out.write("			f.action=\"joinTeacher\";\r\n");
      out.write("			f.method=\"post\";\r\n");
      out.write("			f.enctype=\"multipart/form-data\";\r\n");
      out.write("			\r\n");
      out.write("			document.body.appendChild(f);\r\n");
      out.write("			f.appendChild(id);\r\n");
      out.write("			f.appendChild(pw);\r\n");
      out.write("			f.appendChild(name);\r\n");
      out.write("			f.appendChild(phone);\r\n");
      out.write("			f.appendChild(mbMail);\r\n");
      out.write("			f.appendChild(file);\r\n");
      out.write("			\r\n");
      out.write("			f.submit();\r\n");
      out.write("		}			\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"accesszone\">\r\n");
      out.write("  \r\n");
      out.write("  <div class=\"title\">교사 회원가입</div>\r\n");
      out.write("  <br>\r\n");
      out.write("  \r\n");
      out.write("<div class=\"joinbox\">\r\n");
      out.write("  <div>\r\n");
      out.write("   <input id=\"textbox\" name=\"mbId\" onblur=\"idCheck()\" placeholder=\"아이디\"  />\r\n");
      out.write("  </div>\r\n");
      out.write("   <div id=\"idCheck\"></div>\r\n");
      out.write("  <div>\r\n");
      out.write("   <input type=\"button\" id=\"dubBtn\" class=\"button\" style=\"margin-bottom:10px;\" onClick=\"dupCheck()\" value=\"중복검사\" /> \r\n");
      out.write("  </div>\r\n");
      out.write("  <div>    \r\n");
      out.write("   <input id=\"textbox\" type=\"password\" name=\"mbPw\" style=\"margin-bottom:10px;\" onblur=\"pwCheck()\" placeholder=\"비밀번호\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <div id=\"pwCheck\"></div>\r\n");
      out.write("  <div>\r\n");
      out.write("   <input id=\"textbox\" type=\"password\" name=\"rembPw\" style=\"margin-bottom:10px;\" onblur=\"repwCheck()\" placeholder=\"비밀번호 재확인\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <div id=\"repwCheck\"></div>\r\n");
      out.write("  <div>\r\n");
      out.write("   <input id=\"textbox\" name=\"mbName\" maxlength=5 style=\"margin-bottom:10px;\" placeholder=\"이름\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <div>\r\n");
      out.write("   <input id=\"textbox\" maxlength=11 name=\"mbPhone\" style=\"margin-bottom:10px;\" placeholder=\"번호\">  \r\n");
      out.write("  </div>\r\n");
      out.write("  <div>\r\n");
      out.write("   <input id=\"textbox\" name=\"mail1\" style=\"margin-bottom:10px;\" placeholder=\"이메일\"> <span>@</span><select id=\"mbox\" name=\"mail2\">\r\n");
      out.write("   <option value=\"@naver.com\">naver.com</option>\r\n");
      out.write("   <option value=\"@google.com\">google.com</option>\r\n");
      out.write("  </select>  \r\n");
      out.write("  </div>\r\n");
      out.write("    <input id=\"textbox\" class=\"fbox\" type=\"file\" name=\"mbFile\"/>\r\n");
      out.write("    <input type=\"hidden\" value=\"fileName\" name=\"fileName\" />\r\n");
      out.write("    <div id=\"boxbox\">\r\n");
      out.write("    <input id=\"box\" type=\"button\" onClick=\"submit()\" value=\"회원가입\">\r\n");
      out.write("  </div>\r\n");
      out.write("  <a href=\"/loginForm\" id=\"lbox\" ><img\r\n");
      out.write("						src=\"resources/images/left_arrow1.png\"\r\n");
      out.write("						style=\"height: 35px; width: 35px;\" />로그인</a>\r\n");
      out.write("	<div>\r\n");
      out.write("   <a href=\"/joinStuForm\" id=\"lbox\" ><img\r\n");
      out.write("						src=\"resources/images/s_profile1.png\"\r\n");
      out.write("						style=\"height: 55px; width: 55px;\" /> 학생 회원가입</a> \r\n");
      out.write("  </div> 					\r\n");
      out.write(" </div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
